buildscript {
    repositories {
        jcenter()
        maven {
        url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.3.0"
    }
}

plugins {
    id 'io.codearte.nexus-staging' version '0.21.2'
    id "org.sonarqube" version "3.0"
}

wrapper {
    gradleVersion = '6.3'
}

allprojects {
    version = '1.4-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'de.marcphilipp.nexus-publish'
    apply plugin: 'jacoco'

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenCentral()
    }

    group = 'org.openapitools.openapistylevalidator'

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.30'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    }

    signing {
        useGpgCmd()
        sign(publishing.publications)
    }

    tasks.withType(Sign) {
        onlyIf {
            project.hasProperty('signing.gnupg.keyName')
        }
    }

    nexusPublishing {
        repositories {
            sonatype {
                username = project.findProperty('sonatypeUser') ?: ''
                password = project.findProperty('sonatypePassword') ?: ''
            }
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }

    check.dependsOn jacocoTestReport
}

nexusStaging {
    packageGroup = 'org.openapitools'
    username = project.findProperty('sonatypeUser') ?: ''
    password = project.findProperty('sonatypePassword') ?: ''
}